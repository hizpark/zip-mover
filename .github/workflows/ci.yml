name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  test:
    name: 🧪 Test Suite (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['8.2', '8.3', '8.4']
        include:
          - php: '8.2'
            coverage: 'false'
          - php: '8.3'
            coverage: 'true'
          - php: '8.4'
            coverage: 'false'
    continue-on-error: ${{ matrix.php != '8.3' }}

    steps:
      - name: 🔄 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🗃️ Cache Dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-

      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, dom
          coverage: ${{ matrix.coverage == 'true' && 'xdebug' || 'none' }}

      - name: 📥 Install Composer Dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: 🔍 PHPStan
        run: composer run stan -- --error-format=github

      - name: ✨ PHP-CS-Fixer Check
        run: composer run cs:chk -- --stop-on-violation
        env:
          PHP_CS_FIXER_IGNORE_ENV: 1

      - name: ✅ PHPUnit Tests
        if: matrix.coverage == 'true'
        run: |
          XDEBUG_MODE=coverage vendor/bin/phpunit --testdox --coverage-clover=coverage.xml

      - name: 📊 Upload Coverage to Codecov
        if: matrix.coverage == 'true'
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml

  release:
    name: 🏷️ Create Git Tag Release
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: 🔄 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🚀 Publish Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: |
            🎉 Release ${{ github.ref_name }}
            [📖 README Documentation](https://github.com/hizpark/zip-mover#readme)
          prerelease: false
          draft: false
